When would you want to create a remote repository rather than keeping all your work local?

  When you are ready to sync your work with Github in order to share your work with a collaborator or simply showcase your work on your Github profile page.


Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    The code may not be ready to be publicly published while you are actively working on it. It takes multiple commits to add/enhance features or fix bugs. Once you are ready to display it to the public, you can manually push your changes to Git.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks - Allows you to copy a somebody else's repository directly on Github servers without pulling down the code into your local machine first. When you want to make your own modifications, you can pull your newly created repo and start working on it. Forking gives recognition to the original creator of the repo by having all the forks link back to the original. This is essentially a clone operation on Github's own servers. Forking is only used within the context of Github.
    Clones - Creates a copy of an existing repo. You can clone remote or local repos.
    Branches - Allow you to work on multiple versions of the same repo. This is useful for trying new experimental features/enhancements.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    This is helpful for when you will be offline for an extended period of time (e.g. catching a flight). This local copy can serve as a benchmark for you to check against as you continue your work.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here

